{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"ARZzg91FtnAx","executionInfo":{"status":"ok","timestamp":1748411271245,"user_tz":-210,"elapsed":9222,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}}},"outputs":[],"source":["import os\n","from pathlib import Path\n","import pandas as pd\n","from sklearn.metrics import mean_squared_error, mean_absolute_error\n","import pickle\n","from prophet import Prophet\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import (\n","    mean_squared_error,\n","    mean_absolute_error,\n","    accuracy_score,\n","    precision_score,\n","    recall_score,\n","    f1_score,\n","    r2_score,\n","    mean_absolute_percentage_error\n",")"]},{"cell_type":"code","source":["class MyProphet:\n","    def __init__(self, response_col='y', date_col='ds'):\n","        self.response_col = response_col\n","        self.date_col = date_col\n","        self.model = Prophet()\n","\n","    def add_regressors(self, regressors):\n","        for reg in regressors:\n","            self.model.add_regressor(reg)\n","\n","    def fit(self, data_x):\n","        self.model.fit(data_x)\n","\n","    def predict(self, data_x):\n","        forecast = self.model.predict(data_x)\n","        return forecast  # Return the entire forecast DataFrame"],"metadata":{"id":"AkvHNd27t5mf","executionInfo":{"status":"ok","timestamp":1748411285688,"user_tz":-210,"elapsed":387,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["csv_file_path = '/content/BTC_USD.csv'\n","\n","# Extract base name without extension for naming\n","csv_base = Path(csv_file_path).stem\n","\n","# Define paths for saving the best model and its metrics\n","model_history_dir = Path('model_history')\n","result_history_dir = Path('result_history')\n","\n","os.makedirs(model_history_dir, exist_ok=True)\n","os.makedirs(result_history_dir, exist_ok=True)\n","\n","best_model_filename = f\"{csv_base}_best_model.pt\"\n","best_model_path = model_history_dir / best_model_filename\n","metrics_path = result_history_dir / f\"{csv_base}_metrics.txt\"\n","\n","#forecast_history = 24  # Number of past time steps to use for input sequences.\n","#forecast_horizon = 0  # Number of future time steps to predict (e.g., 0 means predicting the next step immediately).\n","\n","#batch_size = 64  # Number of samples in each mini-batch\n","max_iterations = 100\n","model_name = 'prophtet'\n","order=(5,1,0)\n","best_mse = float('inf')\n","include_baseline = True"],"metadata":{"id":"uQbx7vGVt9wk","executionInfo":{"status":"ok","timestamp":1748411347948,"user_tz":-210,"elapsed":334,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["def log_print(*args, **kwargs):\n","    with open(metrics_path, 'a') as metrics_file:\n","        msg = ' '.join(map(str, args))\n","        print(msg)\n","        metrics_file.write(msg + '\\n')"],"metadata":{"id":"dAM2kn9EuvuF","executionInfo":{"status":"ok","timestamp":1748411292393,"user_tz":-210,"elapsed":309,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["###Preprocess"],"metadata":{"id":"D0-VglIBu1v0"}},{"cell_type":"code","source":["# Load Data\n","try:\n","  df_raw = pd.read_csv(csv_file_path)\n","  print(\"CSV file loaded successfully.\")\n","except Exception as e:\n","  print(f\"Error reading CSV file: {e}\")\n","\n","df_raw.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"3xHsz_ZRu92n","executionInfo":{"status":"ok","timestamp":1748411352505,"user_tz":-210,"elapsed":498,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}},"outputId":"9809437a-32b5-4bd3-e264-2bc2acf03a94"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["CSV file loaded successfully.\n"]},{"output_type":"execute_result","data":{"text/plain":["         Date     Price      Open      High       Low   Vol. Change %\n","0  01/26/2025  105000.0  104700.0  105440.0  104510.0  0.11K    0.29%\n","1  01/25/2025  104700.0  104800.0  105260.0  104100.0  0.14K   -0.10%\n","2  01/24/2025  104800.0  103930.0  107030.0  102720.0  0.52K    0.84%\n","3  01/23/2025  103930.0  103680.0  106780.0  101260.0  1.70K    0.24%\n","4  01/22/2025  103680.0  106150.0  106290.0  103400.0  0.51K   -2.33%\n","5  01/21/2025  106150.0  102170.0  107360.0  100140.0  1.12K    3.90%\n","6  01/20/2025  102170.0  101360.0  109410.0   99634.0  2.92K    0.80%\n","7  01/19/2025  101360.0  104490.0  106370.0   99675.0  1.04K   -3.00%\n","8  01/18/2025  104490.0  104040.0  104950.0  102200.0  0.54K    0.43%\n","9  01/17/2025  104040.0  100040.0  105800.0  100000.0  1.26K    4.00%"],"text/html":["\n","  <div id=\"df-42dc08be-4782-489b-8e96-4a1623ed50e6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01/26/2025</td>\n","      <td>105000.0</td>\n","      <td>104700.0</td>\n","      <td>105440.0</td>\n","      <td>104510.0</td>\n","      <td>0.11K</td>\n","      <td>0.29%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01/25/2025</td>\n","      <td>104700.0</td>\n","      <td>104800.0</td>\n","      <td>105260.0</td>\n","      <td>104100.0</td>\n","      <td>0.14K</td>\n","      <td>-0.10%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01/24/2025</td>\n","      <td>104800.0</td>\n","      <td>103930.0</td>\n","      <td>107030.0</td>\n","      <td>102720.0</td>\n","      <td>0.52K</td>\n","      <td>0.84%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01/23/2025</td>\n","      <td>103930.0</td>\n","      <td>103680.0</td>\n","      <td>106780.0</td>\n","      <td>101260.0</td>\n","      <td>1.70K</td>\n","      <td>0.24%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01/22/2025</td>\n","      <td>103680.0</td>\n","      <td>106150.0</td>\n","      <td>106290.0</td>\n","      <td>103400.0</td>\n","      <td>0.51K</td>\n","      <td>-2.33%</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>01/21/2025</td>\n","      <td>106150.0</td>\n","      <td>102170.0</td>\n","      <td>107360.0</td>\n","      <td>100140.0</td>\n","      <td>1.12K</td>\n","      <td>3.90%</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>01/20/2025</td>\n","      <td>102170.0</td>\n","      <td>101360.0</td>\n","      <td>109410.0</td>\n","      <td>99634.0</td>\n","      <td>2.92K</td>\n","      <td>0.80%</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>01/19/2025</td>\n","      <td>101360.0</td>\n","      <td>104490.0</td>\n","      <td>106370.0</td>\n","      <td>99675.0</td>\n","      <td>1.04K</td>\n","      <td>-3.00%</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>01/18/2025</td>\n","      <td>104490.0</td>\n","      <td>104040.0</td>\n","      <td>104950.0</td>\n","      <td>102200.0</td>\n","      <td>0.54K</td>\n","      <td>0.43%</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>01/17/2025</td>\n","      <td>104040.0</td>\n","      <td>100040.0</td>\n","      <td>105800.0</td>\n","      <td>100000.0</td>\n","      <td>1.26K</td>\n","      <td>4.00%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42dc08be-4782-489b-8e96-4a1623ed50e6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-42dc08be-4782-489b-8e96-4a1623ed50e6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-42dc08be-4782-489b-8e96-4a1623ed50e6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-345969fe-c182-45e5-b877-4a5650e6f382\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-345969fe-c182-45e5-b877-4a5650e6f382')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-345969fe-c182-45e5-b877-4a5650e6f382 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_raw","summary":"{\n  \"name\": \"df_raw\",\n  \"rows\": 3677,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 3677,\n        \"samples\": [\n          \"03/30/2019\",\n          \"04/18/2020\",\n          \"01/16/2015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23113.16177976424,\n        \"min\": 183.0,\n        \"max\": 106150.0,\n        \"num_unique_values\": 3557,\n        \"samples\": [\n          422.6,\n          68061.0,\n          227.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23073.722335557275,\n        \"min\": 181.1,\n        \"max\": 106150.0,\n        \"num_unique_values\": 3544,\n        \"samples\": [\n          3535.6,\n          65045.0,\n          18260.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23567.524547015455,\n        \"min\": 211.0,\n        \"max\": 109410.0,\n        \"num_unique_values\": 3514,\n        \"samples\": [\n          7963.9,\n          91423.0,\n          43477.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22585.303446906313,\n        \"min\": 164.9,\n        \"max\": 105160.0,\n        \"num_unique_values\": 3520,\n        \"samples\": [\n          8755.7,\n          88758.0,\n          41405.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vol.\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2067,\n        \"samples\": [\n          \"1.99K\",\n          \"12.23K\",\n          \"75.22K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change %\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1276,\n        \"samples\": [\n          \"-2.54%\",\n          \"2.75%\",\n          \"0.38%\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["datetime_col = \"Date\"\n","price_col = \"Price\"\n","\n","# Ensure datetime is in correct format\n","df_raw[datetime_col] = pd.to_datetime(df_raw[datetime_col])\n","df = df_raw.sort_values(by=datetime_col).reset_index(drop=True)\n"],"metadata":{"id":"hFyA6LJGvBQF","executionInfo":{"status":"ok","timestamp":1748411355934,"user_tz":-210,"elapsed":313,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# Define the proportions for test and validation sets\n","test_size = 0.05  # Fraction of the data to be used as the test set\n","valid_size = 0.05  # Fraction of the data to be used as the validation set\n","\n","# Calculate the total number of samples in the dataset\n","total_size = len(df)  # The total number of rows in the DataFrame\n","\n","# Calculate the number of samples for the test set\n","test_split = int(total_size * test_size)  # Convert the test size fraction to the actual count\n","\n","# Calculate the number of samples for the validation set\n","valid_split = int(total_size * valid_size)  # Convert the validation size fraction to the actual count\n","\n","# Calculate the end index of the training set (exclusive)\n","train_end = total_size - test_split - valid_split  # Determine where the training set ends\n","\n","# Calculate the end index of the validation set (exclusive)\n","valid_end = total_size - test_split  # Determine where the validation set ends\n","\n","# Split the data into training, validation, and test sets using indices\n","train_df = df.iloc[:train_end]  # Select rows for the training set\n","valid_df = df.iloc[train_end:valid_end]  # Select rows for the validation set\n","test_df = df.iloc[valid_end:]  # Select rows for the test set\n","\n","# Print the sizes of each split for verification\n","print(f\"Data split into train ({len(train_df)}), validation ({len(valid_df)}), and test ({len(test_df)}) sets.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1QncLEIHvkza","executionInfo":{"status":"ok","timestamp":1748411357565,"user_tz":-210,"elapsed":453,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}},"outputId":"4667b99f-1ee2-4775-aa98-0178fbeb8df4"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Data split into train (3311), validation (183), and test (183) sets.\n"]}]},{"cell_type":"code","source":["for iteration in range(max_iterations):\n","      log_print(f\"\\nStarting training iteration {iteration + 1}/{max_iterations}\")\n","\n","      # Initialize the Prophet model\n","      prophet_model = MyProphet(response_col=price_col, date_col=datetime_col)\n","\n","      # If you have additional regressors, add them here\n","      # For example:\n","      # regressors = ['feature1', 'feature2']\n","      # prophet_model.add_regressors(regressors)\n","\n","      # Prepare training data\n","      train_prophet_df = train_df.rename(columns={datetime_col: 'ds', price_col: 'y'})\n","\n","\n","      prophet_model.fit(train_prophet_df)\n","      log_print(\"Model training completed.\")\n","\n","\n","      # Validate the model on validation set\n","      valid_prophet_df = valid_df.rename(columns={datetime_col: 'ds', price_col: 'y'})\n","\n","      preds_valid = prophet_model.predict(valid_prophet_df)\n","      mse_val = mean_squared_error(valid_prophet_df['y'], preds_valid['yhat'])\n","      log_print(f\"Iteration {iteration + 1}: Validation MSE: {mse_val:.6f}\")\n","\n","\n","      # Check if this model is better than the previous best\n","      if mse_val < best_mse:\n","          best_mse = mse_val\n","          # Save the best model\n","          try:\n","              with open(best_model_path, 'wb') as f:\n","                  pickle.dump(prophet_model, f)\n","              log_print(f\"New best model saved at '{best_model_path}' with Validation MSE {best_mse:.6f}\")\n","          except Exception as e:\n","              log_print(f\"Error saving the model: {e}\")"],"metadata":{"id":"jf_W-X0DwFIj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1748411543904,"user_tz":-210,"elapsed":178602,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}},"outputId":"a25cf51e-0be8-474e-8abb-d5448208329b"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Starting training iteration 1/100\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/l0fmltsg.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/1h3_r7dx.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=89140', 'data', 'file=/tmp/tmp7iq1am0l/l0fmltsg.json', 'init=/tmp/tmp7iq1am0l/1h3_r7dx.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model3yz5li7j/prophet_model-20250528054923.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:23 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:25 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/fig27ldu.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 1: Validation MSE: 1046876973.436914\n","New best model saved at 'model_history/BTC_USD_best_model.pt' with Validation MSE 1046876973.436914\n","\n","Starting training iteration 2/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/z32flikp.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=30505', 'data', 'file=/tmp/tmp7iq1am0l/fig27ldu.json', 'init=/tmp/tmp7iq1am0l/z32flikp.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeldrtefgx9/prophet_model-20250528054925.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:25 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:26 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/eq5yay_l.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 2: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 3/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/k6x51evx.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=45810', 'data', 'file=/tmp/tmp7iq1am0l/eq5yay_l.json', 'init=/tmp/tmp7iq1am0l/k6x51evx.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelibg7ap_3/prophet_model-20250528054927.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:27 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:29 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/q8f632dr.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 3: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 4/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/mtfqpsto.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=91071', 'data', 'file=/tmp/tmp7iq1am0l/q8f632dr.json', 'init=/tmp/tmp7iq1am0l/mtfqpsto.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelxfiypsrj/prophet_model-20250528054929.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:29 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:31 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/f8vucmf2.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 4: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 5/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/spmm_3cb.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=57212', 'data', 'file=/tmp/tmp7iq1am0l/f8vucmf2.json', 'init=/tmp/tmp7iq1am0l/spmm_3cb.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model972sawlc/prophet_model-20250528054931.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:31 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:32 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/zds83leo.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 5: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 6/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/jpiz4thx.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=84634', 'data', 'file=/tmp/tmp7iq1am0l/zds83leo.json', 'init=/tmp/tmp7iq1am0l/jpiz4thx.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelt7esadui/prophet_model-20250528054933.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:33 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:34 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/kgfe1e01.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 6: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 7/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ke50_djy.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=52090', 'data', 'file=/tmp/tmp7iq1am0l/kgfe1e01.json', 'init=/tmp/tmp7iq1am0l/ke50_djy.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelfulvuytt/prophet_model-20250528054934.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:34 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:35 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/pkdrgom8.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 7: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 8/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/4ngk29ak.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=12851', 'data', 'file=/tmp/tmp7iq1am0l/pkdrgom8.json', 'init=/tmp/tmp7iq1am0l/4ngk29ak.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelvzq1m4lj/prophet_model-20250528054936.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:36 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:37 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/7mse06sy.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 8: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 9/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/mlxsy1h0.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=50604', 'data', 'file=/tmp/tmp7iq1am0l/7mse06sy.json', 'init=/tmp/tmp7iq1am0l/mlxsy1h0.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model9cbbcmq2/prophet_model-20250528054937.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:37 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:38 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/icrmqzgo.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 9: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 10/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/cai_2ti1.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=44156', 'data', 'file=/tmp/tmp7iq1am0l/icrmqzgo.json', 'init=/tmp/tmp7iq1am0l/cai_2ti1.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modela9sa1tnl/prophet_model-20250528054939.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:39 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:40 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/e7nf8h3v.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 10: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 11/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/lswok5kq.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=40714', 'data', 'file=/tmp/tmp7iq1am0l/e7nf8h3v.json', 'init=/tmp/tmp7iq1am0l/lswok5kq.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelaeb614b5/prophet_model-20250528054941.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:41 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:42 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/a5ilysco.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 11: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 12/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/299fqyqs.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=91627', 'data', 'file=/tmp/tmp7iq1am0l/a5ilysco.json', 'init=/tmp/tmp7iq1am0l/299fqyqs.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model8z3mb0hh/prophet_model-20250528054943.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:43 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:44 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/jfcgrf3v.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 12: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 13/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/tq8bettx.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=14127', 'data', 'file=/tmp/tmp7iq1am0l/jfcgrf3v.json', 'init=/tmp/tmp7iq1am0l/tq8bettx.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model_zed3g2q/prophet_model-20250528054945.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:45 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:46 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 13: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 14/100\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/e9p_9u6i.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ol9dudac.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=51844', 'data', 'file=/tmp/tmp7iq1am0l/e9p_9u6i.json', 'init=/tmp/tmp7iq1am0l/ol9dudac.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model1ufukgte/prophet_model-20250528054946.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:46 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:47 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/jgu39xdu.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 14: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 15/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/slt6_lhd.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=8623', 'data', 'file=/tmp/tmp7iq1am0l/jgu39xdu.json', 'init=/tmp/tmp7iq1am0l/slt6_lhd.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelukyd_lux/prophet_model-20250528054948.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:48 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:49 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/0oa_dii8.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 15: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 16/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/735epazu.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=44436', 'data', 'file=/tmp/tmp7iq1am0l/0oa_dii8.json', 'init=/tmp/tmp7iq1am0l/735epazu.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeladbq349z/prophet_model-20250528054949.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:49 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:51 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ofrn2pts.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 16: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 17/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/mrcbwrfa.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=72166', 'data', 'file=/tmp/tmp7iq1am0l/ofrn2pts.json', 'init=/tmp/tmp7iq1am0l/mrcbwrfa.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modellgd19xc8/prophet_model-20250528054951.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:51 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/oy328yr5.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 17: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 18/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ued5k8gz.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=15038', 'data', 'file=/tmp/tmp7iq1am0l/oy328yr5.json', 'init=/tmp/tmp7iq1am0l/ued5k8gz.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model0755p1ko/prophet_model-20250528054952.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:52 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:54 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/3hcltd0b.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 18: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 19/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/dybgjwqu.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=13595', 'data', 'file=/tmp/tmp7iq1am0l/3hcltd0b.json', 'init=/tmp/tmp7iq1am0l/dybgjwqu.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeln9vfyty8/prophet_model-20250528054954.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:54 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:56 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/c1xek2o8.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 19: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 20/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/c7k4qxhd.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=13797', 'data', 'file=/tmp/tmp7iq1am0l/c1xek2o8.json', 'init=/tmp/tmp7iq1am0l/c7k4qxhd.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeltv8yw3t_/prophet_model-20250528054957.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:57 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:49:58 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/eej2eqgi.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 20: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 21/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/fzq93z5z.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=50302', 'data', 'file=/tmp/tmp7iq1am0l/eej2eqgi.json', 'init=/tmp/tmp7iq1am0l/fzq93z5z.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modely0mg6m_7/prophet_model-20250528054958.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:49:58 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:00 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/3wz_2r86.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 21: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 22/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/eo2k1355.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=98849', 'data', 'file=/tmp/tmp7iq1am0l/3wz_2r86.json', 'init=/tmp/tmp7iq1am0l/eo2k1355.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model7l0tzmid/prophet_model-20250528055000.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:00 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:01 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/inewkmrm.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 22: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 23/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/gjgcqnjj.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=88626', 'data', 'file=/tmp/tmp7iq1am0l/inewkmrm.json', 'init=/tmp/tmp7iq1am0l/gjgcqnjj.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelq5gvqwp_/prophet_model-20250528055002.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:02 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:03 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/r2h34dk1.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 23: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 24/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/s3ahosbv.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=18499', 'data', 'file=/tmp/tmp7iq1am0l/r2h34dk1.json', 'init=/tmp/tmp7iq1am0l/s3ahosbv.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelaa6oalj7/prophet_model-20250528055003.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:03 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:04 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/w4h19wc5.json\n"]},{"output_type":"stream","name":"stdout","text":["Iteration 24: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 25/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/_dlszsfl.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=77519', 'data', 'file=/tmp/tmp7iq1am0l/w4h19wc5.json', 'init=/tmp/tmp7iq1am0l/_dlszsfl.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelb4vevkyx/prophet_model-20250528055005.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:05 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:06 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/xy6kyn_e.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 25: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 26/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/kja50v7s.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=66237', 'data', 'file=/tmp/tmp7iq1am0l/xy6kyn_e.json', 'init=/tmp/tmp7iq1am0l/kja50v7s.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model7stafhxr/prophet_model-20250528055006.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:07 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:08 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 26: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 27/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/2gcdcprq.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/brhubwlq.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=41947', 'data', 'file=/tmp/tmp7iq1am0l/2gcdcprq.json', 'init=/tmp/tmp7iq1am0l/brhubwlq.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model39dekzsj/prophet_model-20250528055009.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:09 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:11 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/l_gxvu37.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 27: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 28/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/5yvnycdj.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=36502', 'data', 'file=/tmp/tmp7iq1am0l/l_gxvu37.json', 'init=/tmp/tmp7iq1am0l/5yvnycdj.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelr43zqf7t/prophet_model-20250528055011.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:11 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:12 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/j7zrtxel.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 28: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 29/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/0_ubywor.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=32471', 'data', 'file=/tmp/tmp7iq1am0l/j7zrtxel.json', 'init=/tmp/tmp7iq1am0l/0_ubywor.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelic7b5igy/prophet_model-20250528055012.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:12 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:14 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/p8br4q96.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 29: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 30/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/dhdjt236.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=51165', 'data', 'file=/tmp/tmp7iq1am0l/p8br4q96.json', 'init=/tmp/tmp7iq1am0l/dhdjt236.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model8lc0782a/prophet_model-20250528055014.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:14 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:15 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/wvqxd2p_.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 30: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 31/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/xfq16d1c.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=18579', 'data', 'file=/tmp/tmp7iq1am0l/wvqxd2p_.json', 'init=/tmp/tmp7iq1am0l/xfq16d1c.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model165d8kfi/prophet_model-20250528055015.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:16 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:17 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/mxpur9nk.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 31: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 32/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/aidosj9w.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=89471', 'data', 'file=/tmp/tmp7iq1am0l/mxpur9nk.json', 'init=/tmp/tmp7iq1am0l/aidosj9w.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model_dljoop4/prophet_model-20250528055017.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:17 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:18 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ijzcsq1d.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 32: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 33/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/cj8_b25s.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=95787', 'data', 'file=/tmp/tmp7iq1am0l/ijzcsq1d.json', 'init=/tmp/tmp7iq1am0l/cj8_b25s.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model4shyrork/prophet_model-20250528055019.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:19 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:20 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/fwaxiids.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 33: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 34/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/oesb452m.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=63584', 'data', 'file=/tmp/tmp7iq1am0l/fwaxiids.json', 'init=/tmp/tmp7iq1am0l/oesb452m.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeld0q6ituj/prophet_model-20250528055020.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:20 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:22 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 34: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 35/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/jhr6j078.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/l3l5zqm0.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=60342', 'data', 'file=/tmp/tmp7iq1am0l/jhr6j078.json', 'init=/tmp/tmp7iq1am0l/l3l5zqm0.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model_8mjyvxu/prophet_model-20250528055023.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:23 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:24 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 35: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 36/100\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/dxf30rn4.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/cmqev3a9.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=91398', 'data', 'file=/tmp/tmp7iq1am0l/dxf30rn4.json', 'init=/tmp/tmp7iq1am0l/cmqev3a9.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeldmi0rnha/prophet_model-20250528055025.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:25 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:26 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/nrpvlkpp.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 36: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 37/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/a3dpgzpk.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=81870', 'data', 'file=/tmp/tmp7iq1am0l/nrpvlkpp.json', 'init=/tmp/tmp7iq1am0l/a3dpgzpk.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model_do5beby/prophet_model-20250528055026.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:26 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:27 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/vuqhbuj6.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 37: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 38/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/werwnyxa.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=48674', 'data', 'file=/tmp/tmp7iq1am0l/vuqhbuj6.json', 'init=/tmp/tmp7iq1am0l/werwnyxa.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model5qqh2s8_/prophet_model-20250528055028.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:28 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:29 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/xy_cpaql.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 38: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 39/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/3vgazpyk.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=20065', 'data', 'file=/tmp/tmp7iq1am0l/xy_cpaql.json', 'init=/tmp/tmp7iq1am0l/3vgazpyk.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model7q0entt2/prophet_model-20250528055029.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:29 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:30 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/49mujcqa.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 39: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 40/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/fall5120.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=83086', 'data', 'file=/tmp/tmp7iq1am0l/49mujcqa.json', 'init=/tmp/tmp7iq1am0l/fall5120.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelip4oxxm9/prophet_model-20250528055031.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:31 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:32 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/11hisxbr.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 40: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 41/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/bz1qqfs2.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=91682', 'data', 'file=/tmp/tmp7iq1am0l/11hisxbr.json', 'init=/tmp/tmp7iq1am0l/bz1qqfs2.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelu086nbyt/prophet_model-20250528055032.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:32 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:34 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 41: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 42/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/dcadqoic.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ud52d6hv.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=23573', 'data', 'file=/tmp/tmp7iq1am0l/dcadqoic.json', 'init=/tmp/tmp7iq1am0l/ud52d6hv.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model12mje81r/prophet_model-20250528055035.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:35 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:37 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/2dft858r.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 42: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 43/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/16r2xewb.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=30934', 'data', 'file=/tmp/tmp7iq1am0l/2dft858r.json', 'init=/tmp/tmp7iq1am0l/16r2xewb.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeldlnnr5pj/prophet_model-20250528055037.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:37 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:38 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/x2_5d1lh.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 43: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 44/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/niz3641e.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=59562', 'data', 'file=/tmp/tmp7iq1am0l/x2_5d1lh.json', 'init=/tmp/tmp7iq1am0l/niz3641e.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelmhoc_6vo/prophet_model-20250528055038.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:38 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:40 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/22rawvxv.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 44: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 45/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/o6lnrdmv.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=96903', 'data', 'file=/tmp/tmp7iq1am0l/22rawvxv.json', 'init=/tmp/tmp7iq1am0l/o6lnrdmv.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model6cn10kbi/prophet_model-20250528055040.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:40 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:41 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/903yxikw.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 45: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 46/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/zivmz9n7.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=84397', 'data', 'file=/tmp/tmp7iq1am0l/903yxikw.json', 'init=/tmp/tmp7iq1am0l/zivmz9n7.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model0ucurcff/prophet_model-20250528055042.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:42 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:43 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/imq9c954.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 46: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 47/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/jwdorzl2.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=7746', 'data', 'file=/tmp/tmp7iq1am0l/imq9c954.json', 'init=/tmp/tmp7iq1am0l/jwdorzl2.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelwsuu3wem/prophet_model-20250528055043.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:43 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:45 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/r28xfu1e.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 47: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 48/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/e43c5n7e.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=70115', 'data', 'file=/tmp/tmp7iq1am0l/r28xfu1e.json', 'init=/tmp/tmp7iq1am0l/e43c5n7e.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelnnqplq1u/prophet_model-20250528055045.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:45 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:46 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/0kjky693.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 48: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 49/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/wz__ex3y.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=85352', 'data', 'file=/tmp/tmp7iq1am0l/0kjky693.json', 'init=/tmp/tmp7iq1am0l/wz__ex3y.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelwqk72rv7/prophet_model-20250528055046.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:46 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:48 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 49: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 50/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/rvpm_bf6.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/7iqej67u.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=57353', 'data', 'file=/tmp/tmp7iq1am0l/rvpm_bf6.json', 'init=/tmp/tmp7iq1am0l/7iqej67u.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeldo29j8yy/prophet_model-20250528055049.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:49 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:51 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/3nohm_rl.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 50: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 51/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/fpabmh_2.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=52913', 'data', 'file=/tmp/tmp7iq1am0l/3nohm_rl.json', 'init=/tmp/tmp7iq1am0l/fpabmh_2.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelzesg3lp9/prophet_model-20250528055051.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:51 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/elul7tot.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 51: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 52/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/a0_r5p6v.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=63774', 'data', 'file=/tmp/tmp7iq1am0l/elul7tot.json', 'init=/tmp/tmp7iq1am0l/a0_r5p6v.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelq9muf4q3/prophet_model-20250528055053.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:54 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/wnnhxuqy.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 52: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 53/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/km5qn70h.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=39549', 'data', 'file=/tmp/tmp7iq1am0l/wnnhxuqy.json', 'init=/tmp/tmp7iq1am0l/km5qn70h.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model46vuq9uv/prophet_model-20250528055054.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:54 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:56 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/9du5a4ej.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 53: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 54/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/vwmbqq5h.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=85965', 'data', 'file=/tmp/tmp7iq1am0l/9du5a4ej.json', 'init=/tmp/tmp7iq1am0l/vwmbqq5h.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model3wv2dwgs/prophet_model-20250528055056.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:56 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:57 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/t77vk3_0.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 54: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 55/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/njrle2rj.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=46269', 'data', 'file=/tmp/tmp7iq1am0l/t77vk3_0.json', 'init=/tmp/tmp7iq1am0l/njrle2rj.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model7gv27bo9/prophet_model-20250528055057.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:57 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:50:59 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/qdz776o6.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 55: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 56/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ctrvvbdz.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=7458', 'data', 'file=/tmp/tmp7iq1am0l/qdz776o6.json', 'init=/tmp/tmp7iq1am0l/ctrvvbdz.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelg76vjm7h/prophet_model-20250528055059.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:50:59 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:01 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 56: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 57/100\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/0nm2s6_9.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/typpf0w_.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=39653', 'data', 'file=/tmp/tmp7iq1am0l/0nm2s6_9.json', 'init=/tmp/tmp7iq1am0l/typpf0w_.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelif9j5268/prophet_model-20250528055101.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:01 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:03 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/s2yi15dd.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 57: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 58/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ged96ypt.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=92477', 'data', 'file=/tmp/tmp7iq1am0l/s2yi15dd.json', 'init=/tmp/tmp7iq1am0l/ged96ypt.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelmak5fn_2/prophet_model-20250528055104.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:04 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:05 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/mzxk1mpi.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 58: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 59/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/rvw3feqd.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=53309', 'data', 'file=/tmp/tmp7iq1am0l/mzxk1mpi.json', 'init=/tmp/tmp7iq1am0l/rvw3feqd.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelprqd5j_l/prophet_model-20250528055105.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:05 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:07 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/_o9c1jxp.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 59: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 60/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/kq18tj0a.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=2261', 'data', 'file=/tmp/tmp7iq1am0l/_o9c1jxp.json', 'init=/tmp/tmp7iq1am0l/kq18tj0a.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model9qbee84d/prophet_model-20250528055107.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:07 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:08 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/0aor6kvl.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 60: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 61/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/qsvw6lb1.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=72653', 'data', 'file=/tmp/tmp7iq1am0l/0aor6kvl.json', 'init=/tmp/tmp7iq1am0l/qsvw6lb1.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelm2jautgh/prophet_model-20250528055109.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:09 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:10 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/nd0ekeq8.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 61: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 62/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/9c177z_e.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=15498', 'data', 'file=/tmp/tmp7iq1am0l/nd0ekeq8.json', 'init=/tmp/tmp7iq1am0l/9c177z_e.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model455mt9zh/prophet_model-20250528055110.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:10 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:11 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/0yic0715.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 62: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 63/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/yuxa_9i7.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=25562', 'data', 'file=/tmp/tmp7iq1am0l/0yic0715.json', 'init=/tmp/tmp7iq1am0l/yuxa_9i7.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelqhoszqfw/prophet_model-20250528055112.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:12 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:13 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/jhh1n5oa.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 63: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 64/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/_eo3el6b.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=61406', 'data', 'file=/tmp/tmp7iq1am0l/jhh1n5oa.json', 'init=/tmp/tmp7iq1am0l/_eo3el6b.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modela9gtlr_z/prophet_model-20250528055113.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:13 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:15 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/1kxle2xo.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 64: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 65/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/twtqlpk3.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=39666', 'data', 'file=/tmp/tmp7iq1am0l/1kxle2xo.json', 'init=/tmp/tmp7iq1am0l/twtqlpk3.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelaxo_njz0/prophet_model-20250528055116.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:16 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:17 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ypjz9aei.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 65: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 66/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/4_jqnyj7.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=95365', 'data', 'file=/tmp/tmp7iq1am0l/ypjz9aei.json', 'init=/tmp/tmp7iq1am0l/4_jqnyj7.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model4tzu6ws3/prophet_model-20250528055118.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:18 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:19 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ixgvqa11.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 66: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 67/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/5hfr08nq.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=22350', 'data', 'file=/tmp/tmp7iq1am0l/ixgvqa11.json', 'init=/tmp/tmp7iq1am0l/5hfr08nq.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model1x_t1jbt/prophet_model-20250528055119.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:19 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:21 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/9z7b133s.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 67: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 68/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/32tklcjp.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=47433', 'data', 'file=/tmp/tmp7iq1am0l/9z7b133s.json', 'init=/tmp/tmp7iq1am0l/32tklcjp.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modely4wc832s/prophet_model-20250528055121.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:21 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:22 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/hrx__ph1.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 68: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 69/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/i2p33u1p.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=8967', 'data', 'file=/tmp/tmp7iq1am0l/hrx__ph1.json', 'init=/tmp/tmp7iq1am0l/i2p33u1p.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelkx35g4xe/prophet_model-20250528055123.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:23 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:24 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 69: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 70/100\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/me9c3ynv.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/jot3i9e4.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=18593', 'data', 'file=/tmp/tmp7iq1am0l/me9c3ynv.json', 'init=/tmp/tmp7iq1am0l/jot3i9e4.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelocbuboj1/prophet_model-20250528055124.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:24 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:26 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/fzc75u4q.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 70: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 71/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/6el9swv5.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=73613', 'data', 'file=/tmp/tmp7iq1am0l/fzc75u4q.json', 'init=/tmp/tmp7iq1am0l/6el9swv5.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model2919hjvm/prophet_model-20250528055126.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:26 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:27 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ag11k7ye.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 71: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 72/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/z8izvrm5.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=37798', 'data', 'file=/tmp/tmp7iq1am0l/ag11k7ye.json', 'init=/tmp/tmp7iq1am0l/z8izvrm5.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelzj1qyuzm/prophet_model-20250528055128.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:28 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:30 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/nbyy1sn9.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 72: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 73/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/e1v74y1o.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=94685', 'data', 'file=/tmp/tmp7iq1am0l/nbyy1sn9.json', 'init=/tmp/tmp7iq1am0l/e1v74y1o.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelrfj5nyb6/prophet_model-20250528055130.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:31 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:32 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/blguludo.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 73: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 74/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/o1e90bi9.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=30115', 'data', 'file=/tmp/tmp7iq1am0l/blguludo.json', 'init=/tmp/tmp7iq1am0l/o1e90bi9.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelid3tfewi/prophet_model-20250528055132.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:32 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:33 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/atr5mvzr.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 74: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 75/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/wr_uxfsg.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=6703', 'data', 'file=/tmp/tmp7iq1am0l/atr5mvzr.json', 'init=/tmp/tmp7iq1am0l/wr_uxfsg.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeldttkoiqj/prophet_model-20250528055134.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:34 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:35 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ccxpc0qw.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 75: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 76/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/av4e9_qw.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=83629', 'data', 'file=/tmp/tmp7iq1am0l/ccxpc0qw.json', 'init=/tmp/tmp7iq1am0l/av4e9_qw.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model85_bfy24/prophet_model-20250528055135.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:35 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:37 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/a9sou37u.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 76: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 77/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/3ufmfe92.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=64026', 'data', 'file=/tmp/tmp7iq1am0l/a9sou37u.json', 'init=/tmp/tmp7iq1am0l/3ufmfe92.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelv0_lxnmi/prophet_model-20250528055137.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:37 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:38 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/yy4hfg2b.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 77: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 78/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/a_llcr4p.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=36968', 'data', 'file=/tmp/tmp7iq1am0l/yy4hfg2b.json', 'init=/tmp/tmp7iq1am0l/a_llcr4p.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelwo3asnu0/prophet_model-20250528055139.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:39 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:40 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/r5rv0mfl.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 78: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 79/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/f2kga5fr.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=551', 'data', 'file=/tmp/tmp7iq1am0l/r5rv0mfl.json', 'init=/tmp/tmp7iq1am0l/f2kga5fr.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model_q56x2d5/prophet_model-20250528055140.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:40 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:42 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 79: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 80/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/23izqi53.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/mj307tyi.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=2695', 'data', 'file=/tmp/tmp7iq1am0l/23izqi53.json', 'init=/tmp/tmp7iq1am0l/mj307tyi.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_models8xe4rc9/prophet_model-20250528055143.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:43 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:44 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/odaunal8.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 80: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 81/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/b6xm29vu.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=4145', 'data', 'file=/tmp/tmp7iq1am0l/odaunal8.json', 'init=/tmp/tmp7iq1am0l/b6xm29vu.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modellv5mdnm6/prophet_model-20250528055145.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:45 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:47 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 81: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 82/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/t_6n7zns.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/3icpprsb.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=85701', 'data', 'file=/tmp/tmp7iq1am0l/t_6n7zns.json', 'init=/tmp/tmp7iq1am0l/3icpprsb.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modela_92xc9o/prophet_model-20250528055147.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:47 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:49 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/8hnxt8yf.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 82: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 83/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/hoeggtyx.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=91790', 'data', 'file=/tmp/tmp7iq1am0l/8hnxt8yf.json', 'init=/tmp/tmp7iq1am0l/hoeggtyx.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modeli4d8ne4r/prophet_model-20250528055149.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:49 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:51 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/5kds5oxj.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 83: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 84/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/rudhwry8.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=72087', 'data', 'file=/tmp/tmp7iq1am0l/5kds5oxj.json', 'init=/tmp/tmp7iq1am0l/rudhwry8.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelvepmqny6/prophet_model-20250528055151.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:51 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ku5d6acs.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 84: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 85/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/3n116x8_.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=81806', 'data', 'file=/tmp/tmp7iq1am0l/ku5d6acs.json', 'init=/tmp/tmp7iq1am0l/3n116x8_.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelmclbgt3f/prophet_model-20250528055153.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:54 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 85: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 86/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/eue2iomd.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/yzflfk80.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=66961', 'data', 'file=/tmp/tmp7iq1am0l/eue2iomd.json', 'init=/tmp/tmp7iq1am0l/yzflfk80.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model0js2cmtv/prophet_model-20250528055155.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:55 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:57 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/dp3x6t09.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 86: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 87/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/56n3u1sj.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=21093', 'data', 'file=/tmp/tmp7iq1am0l/dp3x6t09.json', 'init=/tmp/tmp7iq1am0l/56n3u1sj.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelacs4k98c/prophet_model-20250528055157.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:57 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:51:58 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/iug1ictw.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 87: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 88/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/fkj2bxbh.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=40568', 'data', 'file=/tmp/tmp7iq1am0l/iug1ictw.json', 'init=/tmp/tmp7iq1am0l/fkj2bxbh.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelntay76eh/prophet_model-20250528055159.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:51:59 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:00 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ja2q00p4.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 88: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 89/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/_eacb559.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=62885', 'data', 'file=/tmp/tmp7iq1am0l/ja2q00p4.json', 'init=/tmp/tmp7iq1am0l/_eacb559.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model90xftz3v/prophet_model-20250528055200.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:00 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:01 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/zla9puye.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 89: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 90/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/qtn_r4_c.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=69110', 'data', 'file=/tmp/tmp7iq1am0l/zla9puye.json', 'init=/tmp/tmp7iq1am0l/qtn_r4_c.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelbmhpmnzy/prophet_model-20250528055202.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:02 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:03 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/1htowjrq.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 90: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 91/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/4t0axbdk.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=94044', 'data', 'file=/tmp/tmp7iq1am0l/1htowjrq.json', 'init=/tmp/tmp7iq1am0l/4t0axbdk.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelb1ll5ute/prophet_model-20250528055203.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:03 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:05 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 91: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 92/100\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/uik3umet.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/htve829q.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=37621', 'data', 'file=/tmp/tmp7iq1am0l/uik3umet.json', 'init=/tmp/tmp7iq1am0l/htve829q.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelcj47xlcw/prophet_model-20250528055205.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:05 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:06 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/loexwpf0.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 92: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 93/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/hyigwl62.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=35468', 'data', 'file=/tmp/tmp7iq1am0l/loexwpf0.json', 'init=/tmp/tmp7iq1am0l/hyigwl62.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelshiy2xvv/prophet_model-20250528055207.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:07 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:08 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/hs2xkdik.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 93: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 94/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/lpfnrgzp.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=17196', 'data', 'file=/tmp/tmp7iq1am0l/hs2xkdik.json', 'init=/tmp/tmp7iq1am0l/lpfnrgzp.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_models6k1uydz/prophet_model-20250528055209.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:09 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:11 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/3fijrp55.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 94: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 95/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/1mk7ea09.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=19352', 'data', 'file=/tmp/tmp7iq1am0l/3fijrp55.json', 'init=/tmp/tmp7iq1am0l/1mk7ea09.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelbm5amegk/prophet_model-20250528055211.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:11 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:12 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/tvgfpd2d.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 95: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 96/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/j2kczpui.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=46787', 'data', 'file=/tmp/tmp7iq1am0l/tvgfpd2d.json', 'init=/tmp/tmp7iq1am0l/j2kczpui.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelwfbasz4r/prophet_model-20250528055213.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:13 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:14 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/h_27bzcq.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 96: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 97/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/su3o3x6f.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=96189', 'data', 'file=/tmp/tmp7iq1am0l/h_27bzcq.json', 'init=/tmp/tmp7iq1am0l/su3o3x6f.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelh9xze4lf/prophet_model-20250528055214.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:14 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:16 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/44ltsyw7.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 97: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 98/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/dqcq6bo9.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=99130', 'data', 'file=/tmp/tmp7iq1am0l/44ltsyw7.json', 'init=/tmp/tmp7iq1am0l/dqcq6bo9.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelpppjb6e7/prophet_model-20250528055216.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:16 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:17 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/hdtcu5zq.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 98: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 99/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/5uompfho.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=30454', 'data', 'file=/tmp/tmp7iq1am0l/hdtcu5zq.json', 'init=/tmp/tmp7iq1am0l/5uompfho.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_model9fzfoir8/prophet_model-20250528055217.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:17 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:19 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/impxt34e.json\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 99: Validation MSE: 1046876973.436914\n","\n","Starting training iteration 100/100\n"]},{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmp7iq1am0l/ndgwi92v.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=901', 'data', 'file=/tmp/tmp7iq1am0l/impxt34e.json', 'init=/tmp/tmp7iq1am0l/ndgwi92v.json', 'output', 'file=/tmp/tmp7iq1am0l/prophet_modelg55n8dqf/prophet_model-20250528055219.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","05:52:19 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","05:52:20 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Model training completed.\n","Iteration 100: Validation MSE: 1046876973.436914\n"]}]},{"cell_type":"markdown","source":["###Evalute"],"metadata":{"id":"m-XP56MnyWH4"}},{"cell_type":"code","source":["with open(best_model_path, 'rb') as f:\n","    prophet_model = pickle.load(f)\n","    log_print(f\"Model '{model_name}' loaded successfully from '{best_model_path}'.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mCeLHjyXyXYF","executionInfo":{"status":"ok","timestamp":1748411549457,"user_tz":-210,"elapsed":362,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}},"outputId":"13f307ae-ffc4-4d14-bc8e-7007b3cf08d7"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Model 'prophtet' loaded successfully from 'model_history/BTC_USD_best_model.pt'.\n"]}]},{"cell_type":"code","source":["# Prepare test data for Prophet\n","test_prophet_df = test_df.rename(columns={datetime_col: 'ds', price_col: 'y'})\n","log_print(f\"Columns in test_prophet_df: {test_prophet_df.columns.tolist()}\")\n","log_print(f\"Sample data in test_prophet_df:\\n{test_prophet_df.head()}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kh3MoD8DylJr","executionInfo":{"status":"ok","timestamp":1748411551625,"user_tz":-210,"elapsed":449,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}},"outputId":"3e59a0e9-37bc-4fd4-a8d3-0da28bef2245"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Columns in test_prophet_df: ['ds', 'y', 'Open', 'High', 'Low', 'Vol.', 'Change %']\n","Sample data in test_prophet_df:\n","             ds        y     Open     High      Low   Vol. Change %\n","3494 2024-07-28  68419.0  68019.0  68442.0  67225.0  0.16K    0.59%\n","3495 2024-07-29  66933.0  68419.0  70162.0  66666.0  1.22K   -2.17%\n","3496 2024-07-30  66349.0  66933.0  67129.0  65556.0  0.68K   -0.87%\n","3497 2024-07-31  64724.0  66349.0  66939.0  64636.0  0.49K   -2.45%\n","3498 2024-08-01  65465.0  64724.0  65694.0  62413.0  1.43K    1.14%\n"]}]},{"cell_type":"code","source":["# Make predictions\n","preds_test = prophet_model.predict(test_prophet_df)\n","# preds_test is a DataFrame with a 'yhat' column\n","# No need to rename 'yhat' as it's already correctly named\n","preds_test = preds_test[['ds', 'yhat']]\n","# Since 'y' is not scaled, 'yhat' is also in original scale\n","actuals = test_prophet_df['y'].values\n","predictions = preds_test['yhat'].values"],"metadata":{"id":"K3Fj85cby7Xl","executionInfo":{"status":"ok","timestamp":1748411560110,"user_tz":-210,"elapsed":451,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Calculate evaluation metrics\n","mse = mean_squared_error(actuals, predictions)\n","mae = mean_absolute_error(actuals, predictions)\n","rmse = np.sqrt(mse)\n","\n","mse_val = mse\n","mae_val = mae\n","r2_val = r2_score(actuals, predictions)\n","mape_val = mean_absolute_percentage_error(actuals, predictions)\n","log_print(\"\\nTest Metrics:\")\n","log_print(\"-------------\")\n","log_print(f\"{model_name} Model:\")\n","log_print(f\"  MAE  : {mae:.6f}\")\n","log_print(f\"  MSE  : {mse:.6f}\")\n","log_print(f\"  RMSE : {rmse:.6f}\")\n","log_print(f\" R2_Score: {r2_val:.6f}\\n\")\n","if include_baseline:\n","            # Baseline Prediction: Last value of the input sequence\n","            # Here, assuming the last observed price is the baseline\n","            # Adjust this as per your actual baseline strategy\n","            baseline_predictions = test_df[price_col].values  # Directly access 'Price' column\n","\n","\n","            baseline_mse = mean_squared_error(actuals, baseline_predictions)\n","            baseline_mae = mean_absolute_error(actuals, baseline_predictions)\n","            baseline_rmse = np.sqrt(baseline_mse)\n","\n","            log_print(\"Baseline Metrics:\")\n","            log_print(f\"  MAE  : {baseline_mae:.6f}\")\n","            log_print(f\"  MSE  : {baseline_mse:.6f}\")\n","            log_print(f\"  RMSE : {baseline_rmse:.6f}\\n\")\n","\n","            # Compare model and baseline in terms of MSE\n","            mse_diff = mse - baseline_mse\n","            mse_percentage = (mse_diff / baseline_mse) * 100\n","\n","            if mse_percentage > 0:\n","                log_print(f\"Model MSE is worse by {mse_percentage:.2f}% compared to the baseline.\")\n","            else:\n","                log_print(f\"Model MSE is better by {abs(mse_percentage):.2f}% compared to the baseline.\")\n","\n","\n","# Log final evaluation info\n","log_print(f\"\\nEvaluation completed for '{csv_base}' with model '{model_name}' and forecast_history={forecast_history}.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":453},"id":"KVEWr7LPzrSW","executionInfo":{"status":"error","timestamp":1748411705867,"user_tz":-210,"elapsed":449,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}},"outputId":"8f6b3aed-af43-4fdf-bb69-29388be0dabc"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Test Metrics:\n","-------------\n","prophtet Model:\n","  MAE  : 46797.422130\n","  MSE  : 2454877975.782616\n","  RMSE : 49546.725177\n"," R2_Score: -6.949964\n","\n","Baseline Metrics:\n","  MAE  : 0.000000\n","  MSE  : 0.000000\n","  RMSE : 0.000000\n","\n"]},{"output_type":"error","ename":"ZeroDivisionError","evalue":"float division by zero","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mZeroDivisionError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-5b706f3163e2>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     33\u001b[0m             \u001b[0;31m# Compare model and baseline in terms of MSE\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m             \u001b[0mmse_diff\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmse\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mbaseline_mse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 35\u001b[0;31m             \u001b[0mmse_percentage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mmse_diff\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mbaseline_mse\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     36\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mmse_percentage\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mZeroDivisionError\u001b[0m: float division by zero"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n","try:\n","  results = pd.read_csv('/content/drive/MyDrive/bitcoin/results.csv')\n","except Exception as e:\n","  print(e)\n","  results = pd.DataFrame(columns=['model','MSE', 'MAE','R2_score','MAPE','time frame', 'type'])\n","\n","results.loc[len(results)] = [model_name, mse_val, mae_val, r2_val, mape_val, '2015_2019' , 'h']\n","results.to_csv('/content/drive/MyDrive/bitcoin/results.csv', index=False)\n","results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"dWkNC2lI00Q8","executionInfo":{"status":"ok","timestamp":1747747177210,"user_tz":-210,"elapsed":2984,"user":{"displayName":"shakiba mb","userId":"12842174147580580125"}},"outputId":"592bf2da-ae92-40ad-dc98-eefc4599dae3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"execute_result","data":{"text/plain":["      model           MSE           MAE   R2_score      MAPE time frame type\n","0      Lstm  1.389904e+05    264.869904   0.663615  0.031106  2015_2019    h\n","1      Lstm  1.235698e+07   2656.415283   0.959166  0.030248  2015_2025    h\n","2     mLstm  4.015359e+06   1431.601807   0.986731  0.017758  2015_2025    h\n","3     sLstm  1.144006e+05    250.424500   0.723127  0.029518  2015_2019    h\n","4     xLstm  1.270245e+05    274.627167   0.692575  0.032396  2015_2019    h\n","5     Arima  9.475766e+05    807.973482  -0.114735  0.086864  2015_2019    h\n","6     Arima  1.589004e+09  35780.719331  -4.145886  0.432990  2015_2025    h\n","7     sLstm  4.004088e+06   1430.421387   0.986768  0.017746  2015_2025    h\n","8  prophtet  2.454878e+09  46797.422130  -6.949964  0.586149  2015_2025    h\n","9  prophtet  2.901797e+07   5342.608098 -33.136929  0.591624  2015_2019    h"],"text/html":["\n","  <div id=\"df-e7be03be-cc41-48a2-8b42-054eec1f2143\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>MSE</th>\n","      <th>MAE</th>\n","      <th>R2_score</th>\n","      <th>MAPE</th>\n","      <th>time frame</th>\n","      <th>type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Lstm</td>\n","      <td>1.389904e+05</td>\n","      <td>264.869904</td>\n","      <td>0.663615</td>\n","      <td>0.031106</td>\n","      <td>2015_2019</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lstm</td>\n","      <td>1.235698e+07</td>\n","      <td>2656.415283</td>\n","      <td>0.959166</td>\n","      <td>0.030248</td>\n","      <td>2015_2025</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>mLstm</td>\n","      <td>4.015359e+06</td>\n","      <td>1431.601807</td>\n","      <td>0.986731</td>\n","      <td>0.017758</td>\n","      <td>2015_2025</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>sLstm</td>\n","      <td>1.144006e+05</td>\n","      <td>250.424500</td>\n","      <td>0.723127</td>\n","      <td>0.029518</td>\n","      <td>2015_2019</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>xLstm</td>\n","      <td>1.270245e+05</td>\n","      <td>274.627167</td>\n","      <td>0.692575</td>\n","      <td>0.032396</td>\n","      <td>2015_2019</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Arima</td>\n","      <td>9.475766e+05</td>\n","      <td>807.973482</td>\n","      <td>-0.114735</td>\n","      <td>0.086864</td>\n","      <td>2015_2019</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Arima</td>\n","      <td>1.589004e+09</td>\n","      <td>35780.719331</td>\n","      <td>-4.145886</td>\n","      <td>0.432990</td>\n","      <td>2015_2025</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>sLstm</td>\n","      <td>4.004088e+06</td>\n","      <td>1430.421387</td>\n","      <td>0.986768</td>\n","      <td>0.017746</td>\n","      <td>2015_2025</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>prophtet</td>\n","      <td>2.454878e+09</td>\n","      <td>46797.422130</td>\n","      <td>-6.949964</td>\n","      <td>0.586149</td>\n","      <td>2015_2025</td>\n","      <td>h</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>prophtet</td>\n","      <td>2.901797e+07</td>\n","      <td>5342.608098</td>\n","      <td>-33.136929</td>\n","      <td>0.591624</td>\n","      <td>2015_2019</td>\n","      <td>h</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7be03be-cc41-48a2-8b42-054eec1f2143')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e7be03be-cc41-48a2-8b42-054eec1f2143 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e7be03be-cc41-48a2-8b42-054eec1f2143');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-cda14e1f-16a9-4c36-bb35-4869028d59ed\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cda14e1f-16a9-4c36-bb35-4869028d59ed')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-cda14e1f-16a9-4c36-bb35-4869028d59ed button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results","summary":"{\n  \"name\": \"results\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"model\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Lstm\",\n          \"mLstm\",\n          \"prophtet\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 874058737.1730268,\n        \"min\": 114400.6328125,\n        \"max\": 2454877975.782616,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2454877975.782616,\n          12356983.0,\n          947576.557743704\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17021.589493461233,\n        \"min\": 250.42449951171875,\n        \"max\": 46797.42213015118,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          46797.42213015118,\n          2656.415283203125,\n          807.9734816183941\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.60996107278294,\n        \"min\": -33.13692866801215,\n        \"max\": 0.9867681860923768,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -6.949964428199296,\n          0.9591655135154724,\n          -0.1147353970605866\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAPE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.24685289759734555,\n        \"min\": 0.0177461244165897,\n        \"max\": 0.5916238564945978,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.5861493937315874,\n          0.030248362571001,\n          0.0868636176856468\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time frame\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2015_2025\",\n          \"2015_2019\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"h\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":28}]}]}